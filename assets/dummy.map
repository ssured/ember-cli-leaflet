{"version":3,"sources":["vendor/ember-cli/app-prefix.js","dummy/app.js","dummy/components/leaf-base.js","dummy/components/leaf-control.js","dummy/components/leaf-draw.js","dummy/components/leaf-feature-group.js","dummy/components/leaf-geojson.js","dummy/components/leaf-ilayer-bounds.js","dummy/components/leaf-ilayer-latlng.js","dummy/components/leaf-ilayer.js","dummy/components/leaf-image-overlay.js","dummy/components/leaf-layer-group.js","dummy/components/leaf-map.js","dummy/components/leaf-marker.js","dummy/components/leaf-path.js","dummy/components/leaf-polyline.js","dummy/components/leaf-popup.js","dummy/components/leaf-rectangle.js","dummy/components/leaf-tile-mapbox.js","dummy/components/leaf-tile.js","dummy/controllers/application.js","dummy/controllers/position.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-base.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-control.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-draw.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-feature-group.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-geojson.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-ilayer-bounds.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-ilayer-latlng.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-ilayer.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-image-overlay.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-layer-group.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-map.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-marker.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-path.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-polyline.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-popup.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-rectangle.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-tile-mapbox.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-tile.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/helpers/arr.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/helpers/latlng.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/helpers/neg.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/initializers/my-helpers.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/mixins/leaf-layer-group-promise.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/mixins/leaf-map-promise.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/mixins/leaf-marker-promise.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/mixins/leaf-style.jshint.js","dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/utils/rect.jshint.js","dummy/initializers/app-version.js","dummy/initializers/export-application-global.js","dummy/router.js","dummy/routes/application.js","dummy/routes/position.js","dummy/templates/application.js","dummy/templates/position.js","dummy/tests/app.jshint.js","dummy/tests/controllers/application.jshint.js","dummy/tests/controllers/position.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/router.jshint.js","dummy/tests/routes/application.jshint.js","dummy/tests/routes/position.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","dummy/tests/utils/geohash.jshint.js","dummy/utils/geohash.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'dummy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  L.Icon.Default.imagePath = \"/assets/images\";\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('dummy/components/leaf-base', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-base'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-control', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-control'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-draw', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-draw'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-feature-group', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-feature-group'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-geojson', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-geojson'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-ilayer-bounds', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-ilayer-bounds'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-ilayer-latlng', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-ilayer-latlng'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-ilayer', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-ilayer'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-image-overlay', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-image-overlay'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-layer-group', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-layer-group'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-map', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-map'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-marker', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-marker'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-path', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-path'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-polyline', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-polyline'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-popup', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-popup'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-rectangle', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-rectangle'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-tile-mapbox', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-tile-mapbox'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/components/leaf-tile', ['exports', 'ember', 'ember-cli-leaflet/components/leaf-tile'], function (exports, Ember, Component) {\n\n\t'use strict';\n\n\texports['default'] = Component['default'];\n\n});","define('dummy/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    queryParams: [\"latlng\", \"zoom\"],\n    latlng: \"53.2, 6.58\",\n    zoom: 12\n  });\n\n});","define('dummy/controllers/position', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    center: Ember['default'].computed(\"model\", function () {\n      return this.get(\"model\").getCenter();\n    }),\n    bBoxString: Ember['default'].computed(\"model\", function () {\n      return this.get(\"model\").toBBoxString();\n    }),\n\n    seconds: 0,\n    secondsDidChange: Ember['default'].observer(\"seconds\", function () {\n      Ember['default'].run.later(this, function () {\n        this.incrementProperty(\"seconds\");\n      }, 1000);\n    }).on(\"init\"),\n\n    showPopup: false,\n    modelDidChange: Ember['default'].observer(\"model\", function () {\n      this.set(\"showPopup\", false);\n    }),\n\n    actions: {\n      markerClick: function markerClick(markerComponent, event) {\n        this.toggleProperty(\"showPopup\");\n        return false;\n      }\n    }\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-base.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-base.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-base.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-control.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-control.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-control.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-draw.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-draw.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-draw.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-feature-group.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-feature-group.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-feature-group.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-geojson.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-geojson.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-geojson.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-ilayer-bounds.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-ilayer-bounds.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-ilayer-bounds.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-ilayer-latlng.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-ilayer-latlng.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-ilayer-latlng.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-ilayer.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-ilayer.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-ilayer.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-image-overlay.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-image-overlay.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-image-overlay.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-layer-group.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-layer-group.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-layer-group.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-map.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-map.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-map.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-marker.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-marker.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-marker.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-path.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-path.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-path.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-polyline.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-polyline.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-polyline.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-popup.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-popup.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-popup.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-rectangle.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-rectangle.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-rectangle.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-tile-mapbox.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-tile-mapbox.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-tile-mapbox.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/components/leaf-tile.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/components\");\n  test(\"modules/ember-cli-leaflet/components/leaf-tile.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/components/leaf-tile.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/helpers/arr.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/helpers\");\n  test(\"modules/ember-cli-leaflet/helpers/arr.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/helpers/arr.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/helpers/latlng.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/helpers\");\n  test(\"modules/ember-cli-leaflet/helpers/latlng.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/helpers/latlng.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/helpers/neg.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/helpers\");\n  test(\"modules/ember-cli-leaflet/helpers/neg.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/helpers/neg.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/initializers/my-helpers.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/initializers\");\n  test(\"modules/ember-cli-leaflet/initializers/my-helpers.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/initializers/my-helpers.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/mixins/leaf-layer-group-promise.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/mixins\");\n  test(\"modules/ember-cli-leaflet/mixins/leaf-layer-group-promise.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/mixins/leaf-layer-group-promise.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/mixins/leaf-map-promise.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/mixins\");\n  test(\"modules/ember-cli-leaflet/mixins/leaf-map-promise.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/mixins/leaf-map-promise.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/mixins/leaf-marker-promise.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/mixins\");\n  test(\"modules/ember-cli-leaflet/mixins/leaf-marker-promise.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/mixins/leaf-marker-promise.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/mixins/leaf-style.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/mixins\");\n  test(\"modules/ember-cli-leaflet/mixins/leaf-style.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/mixins/leaf-style.js should pass jshint.\");\n  });\n\n});","define('dummy/ember-cli-leaflet/tests/modules/ember-cli-leaflet/utils/rect.jshint', function () {\n\n  'use strict';\n\n  module(\"JSHint - modules/ember-cli-leaflet/utils\");\n  test(\"modules/ember-cli-leaflet/utils/rect.js should pass jshint\", function () {\n    ok(true, \"modules/ember-cli-leaflet/utils/rect.js should pass jshint.\");\n  });\n\n});","define('dummy/initializers/app-version', ['exports', 'dummy/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route(\"position\", { path: \":hash\" });\n  });\n\n  exports['default'] = Router;\n\n});","define('dummy/routes/application', ['exports', 'ember', 'dummy/utils/geohash'], function (exports, Ember, geohash) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    queryParams: {\n      latlng: { replace: true },\n      zoom: { replace: true }\n    },\n    actions: {\n      mapClick: function mapClick(component, event) {\n        var hash = geohash['default'].encode(event.latlng.lat, event.latlng.lng, 9);\n        this.transitionTo(\"position\", hash);\n        return false;\n      },\n      mapMoveend: function mapMoveend(component, event) {\n        var map = event.target;\n        var center = map.getCenter();\n        this.controller.setProperties({\n          latlng: [center.lat, center.lng].join(\",\"),\n          zoom: map.getZoom()\n        });\n        return false;\n      }\n    }\n  });\n\n});","define('dummy/routes/position', ['exports', 'ember', 'dummy/utils/geohash'], function (exports, Ember, geohash) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model(params) {\n      var bbox = geohash['default'].decode_bbox(params.hash);\n\n      return window.L.latLngBounds([{\n        lat: bbox[0],\n        lng: bbox[1]\n      }, {\n        lat: bbox[2],\n        lng: bbox[3]\n      }]);\n    },\n\n    serialize: function serialize(model) {\n      var center = model.getCenter();\n      return {\n        hash: geohash['default'].encode(center.lat, center.lng, 9)\n      };\n    }\n  });\n\n});","define('dummy/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h2\");\n            dom.setAttribute(el1,\"id\",\"title\");\n            var el2 = dom.createTextNode(\"Center: \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"@\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,0,1);\n            var morph1 = dom.createMorphAt(element0,1,-1);\n            content(env, morph0, context, \"latlng\");\n            content(env, morph1, context, \"zoom\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,1,2,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,2,3,contextualElement);\n          block(env, morph0, context, \"leaf-control\", [], {}, child0, null);\n          inline(env, morph1, context, \"leaf-tile-mapbox\", [], {\"startLatlng\": get(env, context, \"latlng\"), \"startZoom\": get(env, context, \"zoom\")});\n          content(env, morph2, context, \"outlet\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createElement(\"div\");\n        dom.setAttribute(el0,\"class\",\"force-fullscreen\");\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,-1);\n        block(env, morph0, context, \"leaf-map\", [], {\"mapEvents\": \"click moveend\", \"mapClick\": \"mapClick\", \"mapMoveend\": \"mapMoveend\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('dummy/templates/position', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  Now showing \\\"position\\\" route, inside the application template\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"pre\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),-1,-1);\n          content(env, morph0, context, \"bBoxString\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    Auto updating property \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n            content(env, morph0, context, \"seconds\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,1]); }\n          var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n          block(env, morph0, context, \"leaf-popup\", [], {\"latlng\": get(env, context, \"center\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        if (this.cachedFragment) { dom.repairClonedNode(fragment,[0,4]); }\n        var morph0 = dom.createMorphAt(fragment,0,1,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,1,2,contextualElement);\n        var morph2 = dom.createMorphAt(fragment,2,3,contextualElement);\n        var morph3 = dom.createMorphAt(fragment,3,4,contextualElement);\n        block(env, morph0, context, \"leaf-control\", [], {\"position\": \"topright\"}, child0, null);\n        inline(env, morph1, context, \"leaf-rectangle\", [], {\"bounds\": get(env, context, \"model\"), \"color\": \"red\"});\n        inline(env, morph2, context, \"leaf-marker\", [], {\"layerEvents\": \"click\", \"layerClick\": \"markerClick\", \"location\": get(env, context, \"center\")});\n        block(env, morph3, context, \"if\", [get(env, context, \"showPopup\")], {}, child1, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('dummy/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(false, 'app.js should pass jshint.\\napp.js: line 8, col 1, \\'L\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('dummy/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(true, 'controllers/application.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/controllers/position.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/position.js should pass jshint', function() { \n    ok(true, 'controllers/position.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', 'dummy/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/router', 'dummy/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('dummy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/routes/position.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/position.js should pass jshint', function() { \n    ok(true, 'routes/position.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('dummy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/utils/geohash.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - utils');\n  test('utils/geohash.js should pass jshint', function() { \n    ok(false, 'utils/geohash.js should pass jshint.\\nutils/geohash.js: line 300, col 5, Bad line breaking before \\'+\\'.\\nutils/geohash.js: line 302, col 5, Bad line breaking before \\'+\\'.\\n\\n2 errors'); \n  });\n\n});","define('dummy/utils/geohash', ['exports'], function (exports) {\n\n  'use strict';\n\n  // https://raw.githubusercontent.com/sunng87/node-geohash/master/main.js\n  /**\n   * Copyright (c) 2011, Sun Ning.\n   *\n   * Permission is hereby granted, free of charge, to any person\n   * obtaining a copy of this software and associated documentation\n   * files (the \"Software\"), to deal in the Software without\n   * restriction, including without limitation the rights to use, copy,\n   * modify, merge, publish, distribute, sublicense, and/or sell copies\n   * of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be\n   * included in all copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n   * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n   * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n   * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n   * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n   * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   *\n   */\n\n  var BASE32_CODES = \"0123456789bcdefghjkmnpqrstuvwxyz\";\n  var BASE32_CODES_DICT = {};\n  for (var i = 0; i < BASE32_CODES.length; i++) {\n    BASE32_CODES_DICT[BASE32_CODES.charAt(i)] = i;\n  }\n\n  var ENCODE_AUTO = \"auto\";\n  /**\n   * Significant Figure Hash Length\n   *\n   * This is a quick and dirty lookup to figure out how long our hash\n   * should be in order to guarantee a certain amount of trailing\n   * significant figures. This was calculated by determining the error:\n   * 45/2^(n-1) where n is the number of bits for a latitude or\n   * longitude. Key is # of desired sig figs, value is minimum length of\n   * the geohash.\n   * @type Array\n   */\n  //     Desired sig figs:  0  1  2  3  4   5   6   7   8   9  10\n  var SIGFIG_HASH_LENGTH = [0, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18];\n  /**\n   * Encode\n   *\n   * Create a Geohash out of a latitude and longitude that is\n   * `numberOfChars` long.\n   *\n   * @param {Number|String} latitude\n   * @param {Number|String} longitude\n   * @param {Number} numberOfChars\n   * @returns {String}\n   */\n  var encode = function encode(latitude, longitude, numberOfChars) {\n    if (numberOfChars === ENCODE_AUTO) {\n      if (typeof latitude === \"number\" || typeof longitude === \"number\") {\n        throw new Error(\"string notation required for auto precision.\");\n      }\n      var decSigFigsLat = latitude.split(\".\")[1].length;\n      var decSigFigsLong = longitude.split(\".\")[1].length;\n      var numberOfSigFigs = Math.max(decSigFigsLat, decSigFigsLong);\n      numberOfChars = SIGFIG_HASH_LENGTH[numberOfSigFigs];\n    } else if (numberOfChars === undefined) {\n      numberOfChars = 9;\n    }\n\n    var chars = [],\n        bits = 0,\n        bitsTotal = 0,\n        hash_value = 0,\n        maxLat = 90,\n        minLat = -90,\n        maxLon = 180,\n        minLon = -180,\n        mid;\n    while (chars.length < numberOfChars) {\n      if (bitsTotal % 2 === 0) {\n        mid = (maxLon + minLon) / 2;\n        if (longitude > mid) {\n          hash_value = (hash_value << 1) + 1;\n          minLon = mid;\n        } else {\n          hash_value = (hash_value << 1) + 0;\n          maxLon = mid;\n        }\n      } else {\n        mid = (maxLat + minLat) / 2;\n        if (latitude > mid) {\n          hash_value = (hash_value << 1) + 1;\n          minLat = mid;\n        } else {\n          hash_value = (hash_value << 1) + 0;\n          maxLat = mid;\n        }\n      }\n\n      bits++;\n      bitsTotal++;\n      if (bits === 5) {\n        var code = BASE32_CODES[hash_value];\n        chars.push(code);\n        bits = 0;\n        hash_value = 0;\n      }\n    }\n    return chars.join(\"\");\n  };\n\n  /**\n   * Encode Integer\n   *\n   * Create a Geohash out of a latitude and longitude that is of 'bitDepth'.\n   *\n   * @param {Number} latitude\n   * @param {Number} longitude\n   * @param {Number} bitDepth\n   * @returns {Number}\n   */\n  var encode_int = function encode_int(latitude, longitude, bitDepth) {\n\n    bitDepth = bitDepth || 52;\n\n    var bitsTotal = 0,\n        maxLat = 90,\n        minLat = -90,\n        maxLon = 180,\n        minLon = -180,\n        mid,\n        combinedBits = 0;\n\n    while (bitsTotal < bitDepth) {\n      combinedBits *= 2;\n      if (bitsTotal % 2 === 0) {\n        mid = (maxLon + minLon) / 2;\n        if (longitude > mid) {\n          combinedBits += 1;\n          minLon = mid;\n        } else {\n          maxLon = mid;\n        }\n      } else {\n        mid = (maxLat + minLat) / 2;\n        if (latitude > mid) {\n          combinedBits += 1;\n          minLat = mid;\n        } else {\n          maxLat = mid;\n        }\n      }\n      bitsTotal++;\n    }\n    return combinedBits;\n  };\n\n  /**\n   * Decode Bounding Box\n   *\n   * Decode hashString into a bound box matches it. Data returned in a four-element array: [minlat, minlon, maxlat, maxlon]\n   * @param {String} hash_string\n   * @returns {Array}\n   */\n  var decode_bbox = function decode_bbox(hash_string) {\n    var isLon = true,\n        maxLat = 90,\n        minLat = -90,\n        maxLon = 180,\n        minLon = -180,\n        mid;\n\n    var hashValue = 0;\n    for (var i = 0, l = hash_string.length; i < l; i++) {\n      var code = hash_string[i].toLowerCase();\n      hashValue = BASE32_CODES_DICT[code];\n\n      for (var bits = 4; bits >= 0; bits--) {\n        var bit = hashValue >> bits & 1;\n        if (isLon) {\n          mid = (maxLon + minLon) / 2;\n          if (bit === 1) {\n            minLon = mid;\n          } else {\n            maxLon = mid;\n          }\n        } else {\n          mid = (maxLat + minLat) / 2;\n          if (bit === 1) {\n            minLat = mid;\n          } else {\n            maxLat = mid;\n          }\n        }\n        isLon = !isLon;\n      }\n    }\n    return [minLat, minLon, maxLat, maxLon];\n  };\n\n  /**\n   * Decode Bounding Box Integer\n   *\n   * Decode hash number into a bound box matches it. Data returned in a four-element array: [minlat, minlon, maxlat, maxlon]\n   * @param {Number} hashInt\n   * @param {Number} bitDepth\n   * @returns {Array}\n   */\n  var decode_bbox_int = function decode_bbox_int(hashInt, bitDepth) {\n\n    bitDepth = bitDepth || 52;\n\n    var maxLat = 90,\n        minLat = -90,\n        maxLon = 180,\n        minLon = -180;\n\n    var latBit = 0,\n        lonBit = 0;\n    var step = bitDepth / 2;\n\n    for (var i = 0; i < step; i++) {\n\n      lonBit = get_bit(hashInt, (step - i) * 2 - 1);\n      latBit = get_bit(hashInt, (step - i) * 2 - 2);\n\n      if (latBit === 0) {\n        maxLat = (maxLat + minLat) / 2;\n      } else {\n        minLat = (maxLat + minLat) / 2;\n      }\n\n      if (lonBit === 0) {\n        maxLon = (maxLon + minLon) / 2;\n      } else {\n        minLon = (maxLon + minLon) / 2;\n      }\n    }\n    return [minLat, minLon, maxLat, maxLon];\n  };\n\n  function get_bit(bits, position) {\n    return bits / Math.pow(2, position) & 1;\n  }\n\n  /**\n   * Decode\n   *\n   * Decode a hash string into pair of latitude and longitude. A javascript object is returned with keys `latitude`,\n   * `longitude` and `error`.\n   * @param {String} hashString\n   * @returns {Object}\n   */\n  var decode = function decode(hashString) {\n    var bbox = decode_bbox(hashString);\n    var lat = (bbox[0] + bbox[2]) / 2;\n    var lon = (bbox[1] + bbox[3]) / 2;\n    var latErr = bbox[2] - lat;\n    var lonErr = bbox[3] - lon;\n    return { latitude: lat, longitude: lon,\n      error: { latitude: latErr, longitude: lonErr } };\n  };\n\n  /**\n   * Decode Integer\n   *\n   * Decode a hash number into pair of latitude and longitude. A javascript object is returned with keys `latitude`,\n   * `longitude` and `error`.\n   * @param {Number} hash_int\n   * @param {Number} bitDepth\n   * @returns {Object}\n   */\n  var decode_int = function decode_int(hash_int, bitDepth) {\n    var bbox = decode_bbox_int(hash_int, bitDepth);\n    var lat = (bbox[0] + bbox[2]) / 2;\n    var lon = (bbox[1] + bbox[3]) / 2;\n    var latErr = bbox[2] - lat;\n    var lonErr = bbox[3] - lon;\n    return { latitude: lat, longitude: lon,\n      error: { latitude: latErr, longitude: lonErr } };\n  };\n\n  /**\n   * Neighbor\n   *\n   * Find neighbor of a geohash string in certain direction. Direction is a two-element array, i.e. [1,0] means north, [-1,-1] means southwest.\n   * direction [lat, lon], i.e.\n   * [1,0] - north\n   * [1,1] - northeast\n   * ...\n   * @param {String} hashString\n   * @param {Array} Direction as a 2D normalized vector.\n   * @returns {String}\n   */\n  var neighbor = function neighbor(hashString, direction) {\n    var lonLat = decode(hashString);\n    var neighborLat = lonLat.latitude + direction[0] * lonLat.error.latitude * 2;\n    var neighborLon = lonLat.longitude + direction[1] * lonLat.error.longitude * 2;\n    return encode(neighborLat, neighborLon, hashString.length);\n  };\n\n  /**\n   * Neighbor Integer\n   *\n   * Find neighbor of a geohash integer in certain direction. Direction is a two-element array, i.e. [1,0] means north, [-1,-1] means southwest.\n   * direction [lat, lon], i.e.\n   * [1,0] - north\n   * [1,1] - northeast\n   * ...\n   * @param {String} hash_string\n   * @returns {Array}\n  */\n  var neighbor_int = function neighbor_int(hash_int, direction, bitDepth) {\n    bitDepth = bitDepth || 52;\n    var lonlat = decode_int(hash_int, bitDepth);\n    var neighbor_lat = lonlat.latitude + direction[0] * lonlat.error.latitude * 2;\n    var neighbor_lon = lonlat.longitude + direction[1] * lonlat.error.longitude * 2;\n    return encode_int(neighbor_lat, neighbor_lon, bitDepth);\n  };\n\n  /**\n   * Neighbors\n   *\n   * Returns all neighbors' hashstrings clockwise from north around to northwest\n   * 7 0 1\n   * 6 x 2\n   * 5 4 3\n   * @param {String} hash_string\n   * @returns {encoded neighborHashList|Array}\n   */\n  var neighbors = function neighbors(hash_string) {\n\n    var hashstringLength = hash_string.length;\n\n    var lonlat = decode(hash_string);\n    var lat = lonlat.latitude;\n    var lon = lonlat.longitude;\n    var latErr = lonlat.error.latitude * 2;\n    var lonErr = lonlat.error.longitude * 2;\n\n    var neighbor_lat, neighbor_lon;\n\n    var neighborHashList = [encodeNeighbor(1, 0), encodeNeighbor(1, 1), encodeNeighbor(0, 1), encodeNeighbor(-1, 1), encodeNeighbor(-1, 0), encodeNeighbor(-1, -1), encodeNeighbor(0, -1), encodeNeighbor(1, -1)];\n\n    function encodeNeighbor(neighborLatDir, neighborLonDir) {\n      neighbor_lat = lat + neighborLatDir * latErr;\n      neighbor_lon = lon + neighborLonDir * lonErr;\n      return encode(neighbor_lat, neighbor_lon, hashstringLength);\n    }\n\n    return neighborHashList;\n  };\n\n  /**\n   * Neighbors Integer\n   *\n   * Returns all neighbors' hash integers clockwise from north around to northwest\n   * 7 0 1\n   * 6 x 2\n   * 5 4 3\n   * @param {Number} hash_int\n   * @param {Number} bitDepth\n   * @returns {encode_int'd neighborHashIntList|Array}\n   */\n  var neighbors_int = function neighbors_int(hash_int, bitDepth) {\n\n    bitDepth = bitDepth || 52;\n\n    var lonlat = decode_int(hash_int, bitDepth);\n    var lat = lonlat.latitude;\n    var lon = lonlat.longitude;\n    var latErr = lonlat.error.latitude * 2;\n    var lonErr = lonlat.error.longitude * 2;\n\n    var neighbor_lat, neighbor_lon;\n\n    var neighborHashIntList = [encodeNeighbor_int(1, 0), encodeNeighbor_int(1, 1), encodeNeighbor_int(0, 1), encodeNeighbor_int(-1, 1), encodeNeighbor_int(-1, 0), encodeNeighbor_int(-1, -1), encodeNeighbor_int(0, -1), encodeNeighbor_int(1, -1)];\n\n    function encodeNeighbor_int(neighborLatDir, neighborLonDir) {\n      neighbor_lat = lat + neighborLatDir * latErr;\n      neighbor_lon = lon + neighborLonDir * lonErr;\n      return encode_int(neighbor_lat, neighbor_lon, bitDepth);\n    }\n\n    return neighborHashIntList;\n  };\n\n  /**\n   * Bounding Boxes\n   *\n   * Return all the hashString between minLat, minLon, maxLat, maxLon in numberOfChars\n   * @param {Number} minLat\n   * @param {Number} minLon\n   * @param {Number} maxLat\n   * @param {Number} maxLon\n   * @param {Number} numberOfChars\n   * @returns {bboxes.hashList|Array}\n   */\n  var bboxes = function bboxes(minLat, minLon, maxLat, maxLon, numberOfChars) {\n    numberOfChars = numberOfChars || 9;\n\n    var hashSouthWest = encode(minLat, minLon, numberOfChars);\n    var hashNorthEast = encode(maxLat, maxLon, numberOfChars);\n\n    var latLon = decode(hashSouthWest);\n\n    var perLat = latLon.error.latitude * 2;\n    var perLon = latLon.error.longitude * 2;\n\n    var boxSouthWest = decode_bbox(hashSouthWest);\n    var boxNorthEast = decode_bbox(hashNorthEast);\n\n    var latStep = Math.round((boxNorthEast[0] - boxSouthWest[0]) / perLat);\n    var lonStep = Math.round((boxNorthEast[1] - boxSouthWest[1]) / perLon);\n\n    var hashList = [];\n\n    for (var lat = 0; lat <= latStep; lat++) {\n      for (var lon = 0; lon <= lonStep; lon++) {\n        hashList.push(neighbor(hashSouthWest, [lat, lon]));\n      }\n    }\n\n    return hashList;\n  };\n\n  /**\n   * Bounding Boxes Integer\n   *\n   * Return all the hash integers between minLat, minLon, maxLat, maxLon in bitDepth\n   * @param {Number} minLat\n   * @param {Number} minLon\n   * @param {Number} maxLat\n   * @param {Number} maxLon\n   * @param {Number} bitDepth\n   * @returns {bboxes_int.hashList|Array}\n   */\n  var bboxes_int = function bboxes_int(minLat, minLon, maxLat, maxLon, bitDepth) {\n    bitDepth = bitDepth || 52;\n\n    var hashSouthWest = encode_int(minLat, minLon, bitDepth);\n    var hashNorthEast = encode_int(maxLat, maxLon, bitDepth);\n\n    var latlon = decode_int(hashSouthWest, bitDepth);\n\n    var perLat = latlon.error.latitude * 2;\n    var perLon = latlon.error.longitude * 2;\n\n    var boxSouthWest = decode_bbox_int(hashSouthWest, bitDepth);\n    var boxNorthEast = decode_bbox_int(hashNorthEast, bitDepth);\n\n    var latStep = Math.round((boxNorthEast[0] - boxSouthWest[0]) / perLat);\n    var lonStep = Math.round((boxNorthEast[1] - boxSouthWest[1]) / perLon);\n\n    var hashList = [];\n\n    for (var lat = 0; lat <= latStep; lat++) {\n      for (var lon = 0; lon <= lonStep; lon++) {\n        hashList.push(neighbor_int(hashSouthWest, [lat, lon], bitDepth));\n      }\n    }\n\n    return hashList;\n  };\n\n  var geohash = {\n    ENCODE_AUTO: ENCODE_AUTO,\n    encode: encode,\n    encode_uint64: encode_int, // keeping for backwards compatibility, will deprecate\n    encode_int: encode_int,\n    decode: decode,\n    decode_int: decode_int,\n    decode_uint64: decode_int, // keeping for backwards compatibility, will deprecate\n    decode_bbox: decode_bbox,\n    decode_bbox_uint64: decode_bbox_int, // keeping for backwards compatibility, will deprecate\n    decode_bbox_int: decode_bbox_int,\n    neighbor: neighbor,\n    neighbor_int: neighbor_int,\n    neighbors: neighbors,\n    neighbors_int: neighbors_int,\n    bboxes: bboxes,\n    bboxes_int: bboxes_int\n  };\n\n  exports['default'] = geohash;\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"name\":\"ember-cli-leaflet\",\"version\":\"0.0.0.160c331d\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACreA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}